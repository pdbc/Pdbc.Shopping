<#@ template language="C#" debug="false" hostspecific="true" #>
<#@ output extension=".cs" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ include file="$(SolutionDir)T4\Utilities.tt" #>
<#@ include file="$(SolutionDir)T4\MapperTemplates.tt" #>
<#
    var nsRequests = "Pdbc.Music.Api.Mappings.Requests";
    var nsEntities = "Pdbc.Music.Api.Mappings.Entities";

    // Setup variables for using throughout the script.
    var cqrsProject = GetProjectByName("Pdbc.Music.Core");
    var cqrsClasses = GetCqrsClasses(cqrsProject); 

    var apiContractProject = GetProjectByName("Pdbc.Music.Api.Contracts");
    var apiContractClasses = GetApiContractClasses(apiContractProject); 
#>
using System;
using System.Linq;

using AutoMapper;

public class RequestToCqrsMappings : Profile
{
    public RequestToCqrsMappings()
    {
        <#
        foreach(var contractClass in apiContractClasses)
        {   
            var matchingCqrsName = GetMatchingCqrsClassNameFor(contractClass);            
            foreach(var cqrsClass in cqrsClasses)
            {    
            #>

            // <#= contractClass.Name #> <#= matchingCqrsName #>
<#
    if (cqrsClass.Name == matchingCqrsName)
    {
        GenerateRequestCqrsMapperConfiguration(contractClass.Name, contractClass, cqrsClass);break;
    }
}
            #>
        <# 
        }
        #>
    }
}